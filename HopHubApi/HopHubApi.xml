<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HopHubApi</name>
    </assembly>
    <members>
        <member name="T:HopHubApi.Controllers.BeersController">
            <inheritdoc />
            <summary>
            Handles CRUD requests related to Beers.
            </summary>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.#ctor(HopHubApi.Services.IBeerService,Serilog.ILogger)">
            <summary>
            Constructor for the BeersController
            </summary>
            <param name="beerService">Business logic for Beer CRUD operations.</param>
            <param name="logger">Logging service.</param>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.GetAllAsync">
            <summary>
            Gets all of the Beers.
            </summary>
            <returns>List of Beers.</returns>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.GetAllWithReviewsAsync">
            <summary>
            Gets all of the the Beers and their Reviews.
            </summary>
            <returns>List of Beers containing their reviews.</returns>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.GetByIdAsync(System.Int32)">
            <summary>
            Gets requested Beer by Id.
            </summary>
            <param name="id">Uniuque indentifier of the Beer.</param>
            <returns>The Beer requested.</returns>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.CreateAsync(HopHubApi.Models.Beer)">
            <summary>
            Creates a Beer from the information sent in the request.
            </summary>
            <param name="beer">Model representing the Beer's properties.</param>
            <returns>The Beer created.</returns>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.UpdateAsync(System.Int32,HopHubApi.Models.Beer)">
            <summary>
            Updates the properties of a Beer.
            </summary>
            <param name="id">Uniuque indentifier of the Beer.</param>
            <param name="beerUpdate">Model representing the Beer's properties.</param>
        </member>
        <member name="M:HopHubApi.Controllers.BeersController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a Beer.
            </summary>
            <param name="id">Uniuque indentifier of the Beer.</param>
        </member>
        <member name="T:HopHubApi.Startup">
            <summary>
            Configures services and the app's request pipeline.
            </summary>
        </member>
        <member name="M:HopHubApi.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:HopHubApi.Startup"/> class.
            </summary>
            <param name="environment">Hosting Env</param>
        </member>
        <member name="P:HopHubApi.Startup.Configuration">
            <summary>
            Gets a set of key/value application configuration properties.
            </summary>
        </member>
        <member name="P:HopHubApi.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
        </member>
        <member name="M:HopHubApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
        </member>
        <member name="M:HopHubApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Class that defines the mechanisms to configure and application's request pipeline.</param>
            <param name="env">Provides information about the web hosting environment an application is running in.</param>
            <param name="loggerFactory">Used to configure the logging system.</param>
        </member>
    </members>
</doc>
